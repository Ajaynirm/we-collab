{
  "openapi": "3.0.0",
  "info": {
    "title": "we-collab API",
    "version": "1.0.0",
    "description": "API documentation for we-collab system"
  },
  "servers": [
    {
      "url": "http://localhost:9000"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get a task by ID",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "patch": {
        "summary": "Update a task by ID",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The task ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated task title"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a task by ID",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/tasks/filter/{status}/{priority}": {
      "get": {
        "summary": "Filter tasks by status and priority",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "example": "todo"
            }
          },
          {
            "in": "path",
            "name": "priority",
            "required": true,
            "schema": {
              "type": "string",
              "example": "high"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered task list"
          }
        }
      }
    },
    "/tasks/paginate/{page}/{limit}": {
      "get": {
        "summary": "Get paginated tasks",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated tasks retrieved successfully"
          }
        }
      }
    },
    "/tasks/search/{query}": {
      "get": {
        "summary": "Search tasks by keyword",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "meeting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        }
      }
    },
    "/tasks/sort/{sort}": {
      "get": {
        "summary": "Sort tasks by due date",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sort",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sorted tasks retrieved successfully"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}